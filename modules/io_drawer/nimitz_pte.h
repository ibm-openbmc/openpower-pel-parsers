// IBM_PROLOG_BEGIN_TAG 
// This is an automatically generated prolog. 
//  
// fips1060 src/epcf/fsp/plugins/nimitz_pte.h 1.1 
//  
// IBM CONFIDENTIAL 
//  
// OBJECT CODE ONLY SOURCE MATERIALS 
//  
// COPYRIGHT International Business Machines Corp. 2023 
// All Rights Reserved 
//  
// The source code for this program is not published or otherwise 
// divested of its trade secrets, irrespective of what has been 
// deposited with the U.S. Copyright Office. 
//  
// IBM_PROLOG_END_TAG 
// THIS IS AN AUTOGENERATED .h file from header_gen.pl
// baseline: 10-03-2023-a

#define MAX_PTE_LENGTH 9
struct pte_entry_struct
{
  char key[MAX_PTE_LENGTH];
  char format[150];
  uint8_t params[2];
  char file[128];
  uint32_t line;
};

#define PTE_TABLE_SIZE 599

static struct pte_entry_struct static_pte_entry_table[PTE_TABLE_SIZE] = 
{
  { "010000**", "Begin power on, node type = 0x%02X", {4}, "states.cpp", 485 },
  { "0101****", "At power on, fan presence = 0x%02X, current flash chip = %c", {4, 3}, "states.cpp", 530 },
  { "01040000", "Power on complete", {}, "states.cpp", 601 },
  { "01070000", "Starting PGOOD Delay during power on", {}, "states.cpp", 539 },
  { "01100000", "New IO bay %d detected during power on", {3}, "states.cpp", 367 },
  { "0110**00", "New IO bay %d detected during power on", {3}, "states.cpp", 432 },
  { "01410000", "Powering on but IO bay %d VCS PGOOD off", {3}, "states.cpp", 359 },
  { "0141**00", "Powering on but IO bay %d VCS PGOOD off", {3}, "states.cpp", 424 },
  { "014200**", "Starting FPGA state machine on IO bay %d on a power on. Old FPGA state = %d", {3, 4}, "states.cpp", 388 },
  { "0142****", "Starting FPGA state machine on IO bay %d on a power on. Old FPGA state = %d", {3, 4}, "states.cpp", 453 },
  { "01430000", "Very new IO bay %d detected on power on. Collecting VPD", {3}, "states.cpp", 380 },
  { "0143**00", "Very new IO bay %d detected on power on. Collecting VPD", {3}, "states.cpp", 445 },
  { "0158**00", "IO Bay Fault Down cleared, G_iobay_v_disables = 0x%02X", {3}, "states.cpp", 1430 },
  { "0159**00", "Critical Fault Down cleared, G_iobay_v_disables = 0x%02X", {3}, "states.cpp", 1462 },
  { "015B**00", "Rack Power On detected, G_iobay_v_disables = 0x%02X", {3}, "states.cpp", 1479 },
  { "015C**00", "Power state change to ON required, G_iobay_v_disables = 0x%02X", {3}, "states.cpp", 1634 },
  { "015D00**", "Rack Power ON (RPN) command received.  powered_on = 0x%02X", {4}, "cmds.cpp", 2223 },
  { "01600000", "IO bay %d soft switch on detected", {3}, "states.cpp", 1492 },
  { "0160**00", "IO bay %d soft switch on detected", {3}, "states.cpp", 1511 },
  { "0161****", "Starting soft switch on state, pos = %d, hw_present = %d", {3, 4}, "states.cpp", 1227 },
  { "0162**00", "Soft switch on but IO bay %d isn't present", {3}, "states.cpp", 1245 },
  { "01630000", "Enabling I2C on IO bay %d during soft switch on", {3}, "states.cpp", 1267 },
  { "0163**00", "Enabling I2C on IO bay %d during soft switch on", {3}, "states.cpp", 1312 },
  { "01640000", "Soft switch on but IO bay %d VCS off", {3}, "states.cpp", 1276 },
  { "0164**00", "Soft switch on but IO bay %d VCS off", {3}, "states.cpp", 1321 },
  { "0165**00", "Left soft switch already on, G_iobay_v_disables = 0x%02X", {3}, "cmds_util.cpp", 3722 },
  { "0166**00", "Right soft switch already on, G_iobay_v_disables = 0x%02X", {3}, "cmds_util.cpp", 3787 },
  { "0167****", "Left soft switch on, G_iobay_v_disables = 0x%02X, flag changes = 0x%02X", {3, 4}, "cmds_util.cpp", 3690 },
  { "0168****", "Right soft switch on, G_iobay_v_disables = 0x%02X, flag changes = 0x%02X", {3, 4}, "cmds_util.cpp", 3755 },
  { "0200****", "por_state():  This PEROM level = %c%c", {3, 4}, "states.cpp", 254 },
  { "0202**00", "Critical Fault Down detected, G_iobay_v_disables = 0x%02X", {3}, "states.cpp", 1445 },
  { "02060000", "Starting power off", {}, "states.cpp", 646 },
  { "020C0000", "Power off complete", {}, "states.cpp", 672 },
  { "0210****", "Code level date stamp:  month %x, day %x", {3, 4}, "elog.cpp", 859 },
  { "0257**00", "IO Bay Fault Down detected, G_iobay_v_disables = 0x%02X", {3}, "states.cpp", 1407 },
  { "025A**00", "Rack Power Off detected, G_iobay_v_disables = 0x%02X", {3}, "states.cpp", 1469 },
  { "025C****", "Power state change to OFF required, G_iobay_v_disables = 0x%02X, DGOOD = %d", {3, 4}, "states.cpp", 1646 },
  { "025E00**", "Rack Power OFF (RPF) command received.  powered_on = 0x%02X", {4}, "cmds.cpp", 2181 },
  { "02700000", "IO bay %d soft switch off detected", {3}, "states.cpp", 1501 },
  { "0270**00", "IO bay %d soft switch off detected", {3}, "states.cpp", 1520 },
  { "0271****", "Starting soft switch off state, pos = %d, hw_present = %d", {3, 4}, "states.cpp", 1357 },
  { "0275**00", "Left soft switch already off, G_iobay_v_disables = 0x%02X", {3}, "cmds_util.cpp", 3728 },
  { "0276**00", "Right soft switch already off, G_iobay_v_disables = 0x%02X", {3}, "cmds_util.cpp", 3793 },
  { "0277****", "Left soft switch off, G_iobay_v_disables = 0x%02X, flag changes = 0x%02X", {3, 4}, "cmds_util.cpp", 3713 },
  { "0278****", "Right soft switch off, G_iobay_v_disables = 0x%02X, flag changes = 0x%02X", {3, 4}, "cmds_util.cpp", 3778 },
  { "100100**", "PS%d - Faults Cleared", {4}, "mps.cpp", 759 },
  { "102100**", "PS%d experienced PGOOD fault", {4}, "mps.cpp", 1042 },
  { "102200**", "PS%d experienced 12Vaux fault", {4}, "mps.cpp", 1061 },
  { "102300**", "PS%d experienced Vout Over-Voltage fault", {4}, "mps.cpp", 1080 },
  { "102400**", "PS%d experienced Current Share fault", {4}, "mps.cpp", 1099 },
  { "102500**", "PS%d experienced Iout Over-Current fault", {4}, "mps.cpp", 1118 },
  { "102600**", "PS%d experienced Fan fault", {4}, "mps.cpp", 1137 },
  { "102700**", "PS%d experienced Vout Under-Voltage fault", {4}, "mps.cpp", 1156 },
  { "102800**", "PS%d experienced Over-Temperature fault", {4}, "mps.cpp", 1175 },
  { "103000**", "PS%d's GPIO presence pin is broken.  i2c communication succeeded", {4}, "mps.cpp", 459 },
  { "133000**", "I2CS 0 bad state = 0x%02X", {4}, "ints.cpp", 1009 },
  { "133500**", "I2CS 5 bad state = 0x%02X", {4}, "ints.cpp", 1042 },
  { "13BA****", "iicm_generate_i2c_src() Data Line Stuck Low!, I2C bus = %d, Status = 0x%02X", {3, 4}, "iicm_error.cpp", 365 },
  { "13BB****", "iicm_generate_i2c_src() Clock Line Stuck Low!, I2C bus = %d, Status = 0x%02X", {3, 4}, "iicm_error.cpp", 372 },
  { "13BC****", "iicm_generate_i2c_src() Clock and Data Line Stuck Low!, I2C bus = %d, Status = 0x%02X", {3, 4}, "iicm_error.cpp", 379 },
  { "13BD**00", "dcc_i2c_debug() Set I2C SRC, Device = 0x%02X", {3}, "iicm_error.cpp", 518 },
  { "13BE**00", "dcc_i2c_debug() Set I2C Bus SRC, ID = 0x%02X", {3}, "iicm_error.cpp", 526 },
  { "13BF****", "iicm_set_i2c_device_src() Invalid Fault high byte!, Fault High = 0x%02X, Device = 0x%02X", {3, 4}, "iicm_error.cpp", 283 },
  { "1503**00", "Initialize For Download complete with IFD status 0x%02X", {3}, "cmds.cpp", 3119 },
  { "1505**00", "Query Download Status completing with QDS status 0x%02X", {3}, "cmds.cpp", 174 },
  { "1507****", "Download complete with DDA status 0x%02X and download status 0x%02X", {3, 4}, "cmds.cpp", 2952 },
  { "1574**00", "Good non-volatile storage Config ID = 0x%02X", {3}, "nvs.cpp", 1016 },
  { "1593****", "I2C VPD RI not found for RID %02X%02X", {3, 4}, "vpd_col.cpp", 1226 },
  { "1594****", "Unable to find FL kw for RID %02X%02X", {3, 4}, "vpd_col.cpp", 1312 },
  { "1596****", "Unable to find tag 78 for RID %02X%02X", {3, 4}, "vpd_col.cpp", 1312 },
  { "1597****", "Unable to find tag 79 for RID %02X%02X", {3, 4}, "vpd_col.cpp", 1312 },
  { "15A00000", "Bad non-volatile storage count offset", {}, "nvs.cpp", 1001 },
  { "15A10000", "Bad non-volatile storage Config ID", {}, "nvs.cpp", 1023 },
  { "15A20000", "Bad non-volatile storage Frame ID value", {}, "nvs.cpp", 1053 },
  { "15A30000", "Bad non-volatile storage Frame ID", {}, "nvs.cpp", 1063 },
  { "15A40000", "Bad non-volatile storage Frame Type", {}, "nvs.cpp", 1154 },
  { "15A50000", "Bad non-volatile storage Frame Model", {}, "nvs.cpp", 1168 },
  { "15A60000", "Bad non-volatile storage Frame Serial Number", {}, "nvs.cpp", 1182 },
  { "15A70000", "Bad non-volatile storage Manufacturing ID", {}, "nvs.cpp", 1082 },
  { "15A80000", "Bad non-volatile storage Power Controlling Type", {}, "nvs.cpp", 1102 },
  { "15A90000", "Bad non-volatile storage Power Controlling Model", {}, "nvs.cpp", 1120 },
  { "15AA0000", "Bad non-volatile storage Power Controlling Serial Number", {}, "nvs.cpp", 1139 },
  { "15AB0000", "Bad call of non-volatile storage update", {}, "nvs.cpp", 820 },
  { "15AF0000", "Bad non-volatile storage, power down incomplete", {}, "nvs.cpp", 982 },
  { "15B0****", "ECC creation failure  Status %02X%02X", {3, 4}, "mvpdecc.cpp", 131 },
  { "15B1****", "Check ECC data failure  Status %02X%02X", {3, 4}, "mvpdecc.cpp", 268 },
  { "15B2****", "Uncorrectable ECC error  Status %02X%02X", {3, 4}, "mvpdecc.cpp", 359 },
  { "15B3****", "Bad parms get_vpd_format RID  %02X%02X", {3, 4}, "mvpddata.cpp", 256 },
  { "15B3****", "Invalid Parm for RID: %02X %02X ", {3, 4}, "mvpddata.cpp", 3659 },
  { "15B4****", "Invalid VPD format Byte0: %02X  VHDR offset %02X", {3, 4}, "mvpddata.cpp", 323 },
  { "15B4****", "Unknown VPD format  byte0: %02X  HdrOffset: %02X ", {3, 4}, "mvpddata.cpp", 3156 },
  { "15B5****", "Failed validating VPD block RC:%02X %02X ", {3, 4}, "mvpddata.cpp", 587 },
  { "15B6****", "Buffer too small for KW size :%02X %02X ", {3, 4}, "mvpddata.cpp", 751 },
  { "15B7****", "Buffer too small for NumEntries :%02X %02X ", {3, 4}, "mvpddata.cpp", 897 },
  { "15B8****", "Failed validating converged VPD: Status :%02X %02X ", {3, 4}, "mvpddata.cpp", 1929 },
  { "15B9****", "Failed validating legacy VPD: Status :%02X %02X ", {3, 4}, "mvpddata.cpp", 2161 },
  { "15B9****", "Invalid offset parsing VPD:  %02X %02X ", {3, 4}, "mvpddata.cpp", 4474 },
  { "15BA****", "Failed fixing converged VPD ECC :%02X %02X ", {3, 4}, "mvpddata.cpp", 2763 },
  { "15BA****", "Invalid parm : RC: %02X %02X ", {3, 4}, "mvpddata.cpp", 3232 },
  { "15BA****", "Invalid parm : RC: %02X %02X ", {3, 4}, "mvpddata.cpp", 3465 },
  { "15BB****", "Failed fixing keyword VPD :%02X %02X ", {3, 4}, "mvpddata.cpp", 2966 },
  { "15BC****", "Record not found : RC: %02X %02X ", {3, 4}, "mvpddata.cpp", 3496 },
  { "15BC****", "Keyword not found : RC: %02X %02X ", {3, 4}, "mvpddata.cpp", 3566 },
  { "15BC****", "Keyword not found2: %02X %02X ", {3, 4}, "mvpddata.cpp", 3963 },
  { "15BC****", "Data not found parsing VPD: RC:  %02X %02X ", {3, 4}, "mvpddata.cpp", 4574 },
  { "15BD****", "Not supporting keyword VPD write  RC:  %02X %02X ", {3, 4}, "mvpddata.cpp", 4647 },
  { "15BE****", "Chksum error PowerSupplyVpd  RID %02X%02X", {3, 4}, "vpd_col.cpp", 1783 },
  { "15BE****", "Chksum error FanVpd  RID %02X%02X", {3, 4}, "vpd_col.cpp", 1856 },
  { "15BF****", "Correctable ECC error on RID %02X%02X", {3, 4}, "vpd_col.cpp", 1671 },
  { "15C1****", "Unable to write VPD on RID %02X%02X", {3, 4}, "mvpddata.cpp", 4211 },
  { "15C1****", "Unable to correct ECC on RID %02X%02X", {3, 4}, "vpd_col.cpp", 1688 },
  { "15C2****", "Did not find I2C device on write for RID: %02X %02X ", {3, 4}, "mvpddata.cpp", 4223 },
  { "15C3****", "Bad Input Conv Buffer Index  %02X%02X", {3, 4}, "vpd_col.cpp", 1386 },
  { "15C4****", "Bad I2C device in Frame Table %02X%02X", {3, 4}, "vpd_col.cpp", 1589 },
  { "15C5****", "I2C Read failed for RID %02X%02X", {3, 4}, "vpd_col.cpp", 1734 },
  { "15C6****", "No power (3.3VCS) to VPD chip. l_i2cDevice = 0x%02X%02X", {3, 4}, "vpd_col.cpp", 1742 },
  { "15C70000", "Halt because Torpedo plugged into Opheim", {}, "vpd_col.cpp", 2726 },
  { "15C80000", "No midplane CCIN found while checking for an Opheim", {}, "vpd_col.cpp", 2733 },
  { "15D10000", "POP non-volatile storage update", {}, "nvs.cpp", 820 },
  { "15D30000", "WVP non-volatile storage update", {}, "nvs.cpp", 820 },
  { "15D40000", "APA non-volatile storage update", {}, "nvs.cpp", 820 },
  { "15D70000", "Power state non-volatile storage update", {}, "nvs.cpp", 820 },
  { "2055****", "In enable_iobay_i2c(), left IO bay present = 0x%02X, right IO bay present = 0x%02X", {3, 4}, "enables.cpp", 411 },
  { "2056****", "In enable_iobay_i2c(), left IO bay functional = 0x%02X, right IO bay functional = 0x%02X", {3, 4}, "enables.cpp", 414 },
  { "2060**00", "Detected IO bay %d removed, power state = %d", {4, 3}, "states.cpp", 876 },
  { "2060**01", "Detected IO bay %d removed, power state = %d", {4, 3}, "states.cpp", 1012 },
  { "2061**00", "Detected IO bay %d was added, power state = %d", {4, 3}, "states.cpp", 915 },
  { "2061**01", "Detected IO bay %d was added, power state = %d", {4, 3}, "states.cpp", 1051 },
  { "2062**00", "IO bay %d was removed again, power state = %d", {4, 3}, "states.cpp", 975 },
  { "2062**01", "IO bay %d was removed again, power state = %d", {4, 3}, "states.cpp", 1111 },
  { "2063**00", "Enabling I2C on IO bay %d, power state = %d", {4, 3}, "states.cpp", 937 },
  { "2063**01", "Enabling I2C on IO bay %d, power state = %d", {4, 3}, "states.cpp", 1073 },
  { "2064****", "Failed to enable I2C on IO Bay %d, rc = %d", {3, 4}, "enables.cpp", 478 },
  { "2065****", "IO Bay %d type = %d", {3, 4}, "vpd_col.cpp", 2624 },
  { "20700000", "PAS command is setting manufacturing mode", {}, "cmds.cpp", 2063 },
  { "20710000", "PAS command is clearing manufacturing mode", {}, "cmds.cpp", 2070 },
  { "2072****", "P1 VRM Not Plugged!  Plug Detect Bits: P7.BYTE = 0x%02X, PE.BYTE = 0x%02X", {3, 4}, "pgood_monitor.cpp", 705 },
  { "2073****", "P2 VRM Not Plugged!  Plug Detect Bits: P7.BYTE = 0x%02X, PE.BYTE = 0x%02X", {3, 4}, "pgood_monitor.cpp", 881 },
  { "2500****", "Tracing timer rollover counter = 0x%02X%02X", {3, 4}, "elog.cpp", 568 },
  { "2502****", "Create ILOG informational log failed with 0x%02X for %d time(s)", {3, 4}, "elog.cpp", 784 },
  { "2503****", "Create PEL entry failed with 0x%02X for %d time(s)", {3, 4}, "elog.cpp", 617 },
  { "2504****", "PEL entry %d has valid, but incorrect state '%c' when creating new entry", {3, 4}, "elog.cpp", 1743 },
  { "2505****", "PEL entry %d has invalid state '%c' when creating new entry", {3, 4}, "elog.cpp", 1761 },
  { "2506****", "PEL entry %d has valid, but incorrect state '%c' when reporting the entry", {3, 4}, "cmds_util.cpp", 495 },
  { "2507****", "PEL entry %d has invalid state '%c' when reporting the entry", {3, 4}, "cmds_util.cpp", 509 },
  { "2508****", "PEL entry %d has error in Private Header section, length = 0x%02X", {3, 4}, "cmds_util.cpp", 413 },
  { "2509****", "PEL entry has error in Private Header section, section ID = '%c%c'", {3, 4}, "cmds_util.cpp", 415 },
  { "250A****", "PEL entry has error in Private Header section, version = 0x%02X, sub-type = 0x%02X", {3, 4}, "cmds_util.cpp", 418 },
  { "250B****", "PEL entry has error in Private Header section, component ID = 0x%02X%02X", {3, 4}, "cmds_util.cpp", 421 },
  { "250C****", "PEL entry has error in User Header section, section ID = '%c%c'", {3, 4}, "cmds_util.cpp", 446 },
  { "250D****", "PEL entry has error in User Header section, length = 0x%02X%02X", {3, 4}, "cmds_util.cpp", 453 },
  { "250E****", "PEL entry has error in Primary SRC section, section ID = '%c%c'", {3, 4}, "cmds_util.cpp", 460 },
  { "2700****", "Left soft switch, ss_control = 0x%02X%02X", {3, 4}, "cmds_util.cpp", 3670 },
  { "2701****", "Right soft switch, ss_control = 0x%02X%02X", {3, 4}, "cmds_util.cpp", 3735 },
  { "410F00**", "Watchdog timeout detected, system will halt, NMI count = %d", {4}, "ints.cpp", 494 },
  { "412F00**", "Interrupt status, unused count = %d", {4}, "ints.cpp", 638 },
  { "413F0000", "Illegal instruction encounted, system will halt", {}, "ints.cpp", 665 },
  { "4300****", "PEROM test failure with last calculated checksum = 0x%02X%02X", {3, 4}, "bats.cpp", 162 },
  { "4301****", "PEROM test last calculated checksum = 0x%02X%02X", {3, 4}, "bats.cpp", 168 },
  { "43020000", "Erase for background copy failed", {}, "misc.cpp", 149 },
  { "43030000", "Erase for background copy completed successfully", {}, "misc.cpp", 154 },
  { "4304**00", "Start erase for background copy, remaining retries = 0x%02X", {3}, "misc.cpp", 134 },
  { "43050000", "Background copy finished", {}, "misc.cpp", 206 },
  { "43060000", "Start background copy", {}, "misc.cpp", 173 },
  { "4310****", "PEROM select, other level = '%c%c'", {3, 4}, "misc.cpp", 2292 },
  { "4311****", "PEROM select, this level = '%c%c'", {3, 4}, "misc.cpp", 2294 },
  { "43120000", "PEROM select checksum failure", {}, "misc.cpp", 2322 },
  { "4320****", "PEROM erase monitor unknown sector, download status = 0x%02X, sector = 0x%02X", {3, 4}, "misc.cpp", 634 },
  { "43E000**", "Write non-volatile storage erase flash RC = 0x%02X", {4}, "nvs.cpp", 718 },
  { "43E100**", "Write non-volatile storage write flash RC = 0x%02X", {4}, "nvs.cpp", 733 },
  { "43F0****", "PEROM test first calculated checksum = 0x%02X%02X", {3, 4}, "bats.cpp", 142 },
  { "43F1****", "PEROM test intermediate calculated checksum = 0x%02X%02X", {3, 4}, "bats.cpp", 154 },
  { "43F2****", "PEROM test failure code length read = 0x%02X%02X", {3, 4}, "bats.cpp", 113 },
  { "4600****", "Query Download Status block sequence error with download status 0x%02X and expected block 0x%02X", {3, 4}, "cmds.cpp", 166 },
  { "4701****", "Download block sequence error on block 0x%02X received block 0x%02X", {3, 4}, "cmds.cpp", 2800 },
  { "4711****", "Download block sequence error last block 0x%02X and response status 0x%02X", {3, 4}, "cmds.cpp", 2802 },
  { "4712****", "Download block sequence error WBC command ready %d and WBC response ready %d", {3, 4}, "cmds.cpp", 2808 },
  { "4713****", "SAN WBC first command, modifier = 0x%02X and command = 0x%02X", {3, 4}, "san.cpp", 82 },
  { "4714****", "Start download block 0x%02X and DDA command 0x%02X", {3, 4}, "cmds.cpp", 2857 },
  { "4715**00", "san_wbc_cmd_handler() now processing commands from bus %d", {3}, "san.cpp", 92 },
  { "47FF****", "SAN WBC command trace, command = 0x%02X and modifier = 0x%02X", {3, 4}, "san.cpp", 143 },
  { "4940****", "Walking new entries trace buffer (nibble 0) invalid entry size (nibbles 1-3) 0x%02X%02X", {3, 4}, "trac_interface.cpp", 656 },
  { "4941****", "Walking newest entries trace buffer (nibble 0) invalid entry size (nibbles 1-3) 0x%02X%02X", {3, 4}, "trac_interface.cpp", 698 },
  { "4942****", "Walking oldest entries trace buffer (nibble 0) invalid entry size (nibbles 1-3) 0x%02X%02X", {3, 4}, "trac_interface.cpp", 732 },
  { "5010****", "PEROM switch reinitialization, this level = '%c%c'", {3, 4}, "misc.cpp", 2124 },
  { "5011****", "PEROM switch reinitialization, other level = '%c%c'", {3, 4}, "misc.cpp", 2122 },
  { "5013**00", "In perom_switch_reinit, flash chip is now %c", {3}, "misc.cpp", 2127 },
  { "50F1****", "PEROM wait failure, read 1 data = 0x%02X%02X", {3, 4}, "misc.cpp", 1022 },
  { "50F2****", "PEROM wait failure, read 2 data = 0x%02X%02X", {3, 4}, "misc.cpp", 1024 },
  { "50F3****", "Download PEROM failure at byte offset 0x%02X%02X", {3, 4}, "cmds.cpp", 2885 },
  { "50F4****", "PEROM wait failure, destination address high = 0x%02X%02X", {3, 4}, "misc.cpp", 1026 },
  { "50F5****", "PEROM wait failure, destination address low = 0x%02X%02X", {3, 4}, "misc.cpp", 1028 },
  { "50F6****", "PEROM erase verify block not found, address (high bytes) = 0x%02X%02X", {3, 4}, "misc.cpp", 781 },
  { "50F7****", "PEROM erase verify block not found, address (low bytes) = 0x%02X%02X", {3, 4}, "misc.cpp", 783 },
  { "50F8****", "PEROM check status parts, data read = 0x%02X%02X", {3, 4}, "misc.cpp", 432 },
  { "50F9****", "PEROM check status timeout, data read = 0x%02X%02X", {3, 4}, "misc.cpp", 426 },
  { "50FA0000", "PEROM check status, issue reset command", {}, "misc.cpp", 420 },
  { "50FB0000", "PEROM erase block failure", {}, "misc.cpp", 522 },
  { "50FC0000", "PEROM erase chip failure", {}, "misc.cpp", 339 },
  { "50FE****", "PEROM erase verify fixed block, sector = 0x%02X, offset = 0x%02X", {3, 4}, "misc.cpp", 771 },
  { "50FF****", "PEROM wait failure, expected data = 0x%02X%02X", {3, 4}, "misc.cpp", 1020 },
  { "AABB****", "PEROM switch back level prevented, this level = %d, other level = %d", {3, 4}, "misc.cpp", 1195 },
  { "B0010000", "Alert required due to new error log", {}, "fpga.cpp", 1600 },
  { "B0030000", "Alert required due to config change", {}, "fpga.cpp", 1614 },
  { "B0040000", "Alert required due to thermal fault", {}, "fpga.cpp", 1628 },
  { "B0050000", "Starting FPGA alert clear", {}, "fpga.cpp", 1643 },
  { "B0060000", "Starting FPGA IOBay Fault Down scratchpad set", {}, "fpga.cpp", 1651 },
  { "B0070000", "Starting FPGA IOBay Fault Down scratchpad clear", {}, "fpga.cpp", 1659 },
  { "B0080000", "Starting FPGA alert retry", {}, "fpga.cpp", 1672 },
  { "B0090000", "Starting delay to retry the FPGA set alert action", {}, "fpga.cpp", 1806 },
  { "B00A0000", "Starting clear of CMC Ready", {}, "fpga.cpp", 1979 },
  { "B00B****", "fpga_restore_state called on IO bay %d FPGA %d", {3, 4}, "fpga.cpp", 2060 },
  { "B00C****", "fpga_restore_state: Invalid FPGA %d passed in (IO bay %d)", {3, 4}, "fpga.cpp", 2092 },
  { "B00D**00", "fpga_restore_state: Invalid or nonfunctional IO bay %d passed in", {3}, "fpga.cpp", 2098 },
  { "B00E****", "Invalid module ID value %d read from an FPGA on IO Bay %d", {3, 4}, "fpga.cpp", 2146 },
  { "B101**00", "tms_vpd_update:  Could not find VPD buffer for midplane VPD chip %d", {3}, "tms.cpp", 284 },
  { "B1020000", "Retry required for writing TMS values to flash", {}, "nvs.cpp", 885 },
  { "B1030000", "Retry of writing TMS values to flash successful", {}, "nvs.cpp", 900 },
  { "B1040000", "TMS values being updated in empty flash", {}, "tms.cpp", 484 },
  { "B1050000", "TMS data in all VPD and flash matches", {}, "tms.cpp", 510 },
  { "B106****", "Writing TMS data to midplane VPD chip 0 (chip empty = %d, chip broken = %d)", {3, 4}, "tms.cpp", 527 },
  { "B106****", "Writing TMS data to midplane VPD chip 0 (chip empty = %d, chip broken = %d)", {3, 4}, "tms.cpp", 553 },
  { "B107****", "Writing TMS data to midplane VPD chip 1 (chip empty = %d, chip broken = %d)", {3, 4}, "tms.cpp", 533 },
  { "B107****", "Writing TMS data to midplane VPD chip 1 (chip empty = %d, chip broken = %d)", {3, 4}, "tms.cpp", 543 },
  { "B108****", "Using VPD chip 0 as the TMS source (chip 1 empty = %d, chip 1 broken = %d", {3}, "tms.cpp", 634 },
  { "B109****", "Using VPD chip 1 as the TMS source (chip 0 empty = %d, chip 0 broken = %d", {3}, "tms.cpp", 647 },
  { "B10A****", "No valid TMS values found anywhere. vpd0_empty = %d, vpd1_empty = %d", {3, 4}, "tms.cpp", 679 },
  { "B10B0000", "tms_store_vpd_tms:  Updating TMS data in both VPD chips", {}, "tms.cpp", 406 },
  { "E00800AC", "AC loss                              ", {}, "states.cpp", 239 },
  { "E2082620", "P1 IO Bay 3.3VCS Pgood Fault         ", {}, "pgood_monitor.cpp", 753 },
  { "E2082621", "P2 IO Bay 3.3VCS Pgood Fault         ", {}, "pgood_monitor.cpp", 929 },
  { "E2082630", "P1 IO Bay 1.2VCS Module Pgood Fault  ", {}, "pgood_monitor.cpp", 783 },
  { "E2082631", "P2 IO Bay 1.2VCS Module Pgood Fault  ", {}, "pgood_monitor.cpp", 959 },
  { "E2082640", "P1 IO Bay 1.2VCS Module B Pgood Fault", {}, "pgood_monitor.cpp", 816 },
  { "E2082641", "P2 IO Bay 1.2VCS Module B Pgood Fault", {}, "pgood_monitor.cpp", 992 },
  { "E2082650", "P1 IO Bay 12V SS PGood Fault         ", {}, "pgood_monitor.cpp", 560 },
  { "E2082651", "P2 IO Bay 12V SS PGood Fault         ", {}, "pgood_monitor.cpp", 617 },
  { "E2082660", "P1 IO Bay VRM NON-VCS Pgood Fault    ", {}, "pgood_monitor.cpp", 262 },
  { "E2082660", "P1 IO Bay VRM NON-VCS Pgood Fault    ", {}, "pgood_monitor.cpp", 468 },
  { "E2082661", "P2 IO Bay VRM NON-VCS Pgood Fault    ", {}, "pgood_monitor.cpp", 262 },
  { "E2082661", "P2 IO Bay VRM NON-VCS Pgood Fault    ", {}, "pgood_monitor.cpp", 468 },
  { "E2082670", "P1 IO Bay 1.0V Pgood Fault           ", {}, "pgood_monitor.cpp", 288 },
  { "E2082670", "P1 IO Bay 1.0V Pgood Fault           ", {}, "pgood_monitor.cpp", 493 },
  { "E2082671", "P2 IO Bay 1.0V Pgood Fault           ", {}, "pgood_monitor.cpp", 288 },
  { "E2082671", "P2 IO Bay 1.0V Pgood Fault           ", {}, "pgood_monitor.cpp", 493 },
  { "E2082680", "P1 IO Bay 1.0V Pgood Fault B         ", {}, "pgood_monitor.cpp", 516 },
  { "E2082681", "P2 IO Bay 1.0V Pgood Fault B         ", {}, "pgood_monitor.cpp", 516 },
  { "E2082690", "P1 IO Bay VRM is in \"N-Mode\"         ", {}, "vrm_monitor.cpp", 145 },
  { "E2082691", "P2 IO Bay VRM is in \"N-Mode\"         ", {}, "vrm_monitor.cpp", 145 },
  { "E20826A0", "P1 IO Bay VRM is in \"N+1 Mode\" INFO  ", {}, "vrm_monitor.cpp", 181 },
  { "E20826A1", "P2 IO Bay VRM is in \"N+1 Mode\" INFO  ", {}, "vrm_monitor.cpp", 181 },
  { "E20826B0", "P1 IO Bay VRM is in \"N+1 Mode\" CRIT  ", {}, "vrm_monitor.cpp", 203 },
  { "E20826B1", "P2 IO Bay VRM is in \"N+1 Mode\" CRIT  ", {}, "vrm_monitor.cpp", 203 },
  { "E308310E", "I2C Error device IOBAY_1_ADS7828 ", {}, "ads7828_adc.cpp", 155 },
  { "E3083232", "I2C Error device IOBAY_0_ADS7828 ", {}, "ads7828_adc.cpp", 159 },
  { "E3087100", "Sensor Fault - DPS310 on Piney       ", {}, "dps310_sensor.cpp", 252 },
  { "E3087201", "High Temperature Warning             ", {}, "fans_mgr.cpp", 585 },
  { "E3087202", "Temperature Warning Reset            ", {}, "fans_mgr.cpp", 567 },
  { "E3087210", "High Altitude Warning                ", {}, "fans_mgr.cpp", 576 },
  { "E3087500", "Fan Controller Fault - ADT 7470 1    ", {}, "adt7470_fan_ctl.cpp", 304 },
  { "E3087501", "Fan Controller Fault - ADT 7470 2    ", {}, "adt7470_fan_ctl.cpp", 304 },
  { "E3087600", "Fan Fault - PS1 Fan Rotor 1          ", {}, "mps_fan.cpp", 182 },
  { "E3087601", "Fan Fault - PS1 Fan Rotor 2          ", {}, "mps_fan.cpp", 182 },
  { "E3087602", "Fan Fault - PS2 Fan Rotor 1          ", {}, "mps_fan.cpp", 182 },
  { "E3087603", "Fan Fault - PS2 Fan Rotor 2          ", {}, "mps_fan.cpp", 182 },
  { "E3087604", "Fan Fault - System Fan 1, Rotor 1    ", {}, "sys_fan.cpp", 197 },
  { "E3087605", "Fan Fault - System Fan 1, Rotor 2    ", {}, "sys_fan.cpp", 197 },
  { "E3087606", "Fan Fault - System Fan 2, Rotor 1    ", {}, "sys_fan.cpp", 197 },
  { "E3087607", "Fan Fault - System Fan 2, Rotor 2    ", {}, "sys_fan.cpp", 197 },
  { "E3087608", "Fan Fault - System Fan 3, Rotor 1    ", {}, "sys_fan.cpp", 197 },
  { "E3087609", "Fan Fault - System Fan 3, Rotor 2    ", {}, "sys_fan.cpp", 197 },
  { "E308760A", "Fan Fault - System Fan 4, Rotor 1    ", {}, "sys_fan.cpp", 197 },
  { "E308760B", "Fan Fault - System Fan 4, Rotor 2    ", {}, "sys_fan.cpp", 197 },
  { "E3087704", "Fan Missing - System Fan 1           ", {}, "sys_fan.cpp", 191 },
  { "E3087706", "Fan Missing - System Fan 2           ", {}, "sys_fan.cpp", 191 },
  { "E3087708", "Fan Missing - System Fan 3           ", {}, "sys_fan.cpp", 191 },
  { "E308770A", "Fan Missing - System Fan 4           ", {}, "sys_fan.cpp", 191 },
  { "E3087800", "Fan Communication Error - PS1 Rotor1 ", {}, "mps_fan.cpp", 176 },
  { "E3087801", "Fan Communication Error - PS1 Rotor2 ", {}, "mps_fan.cpp", 176 },
  { "E3087802", "Fan Communication Error - PS2 Rotor1 ", {}, "mps_fan.cpp", 176 },
  { "E3087803", "Fan Communication Error - PS2 Rotor2 ", {}, "mps_fan.cpp", 176 },
  { "E5081100", "Power Supply non power fault (PS1)   ", {}, "mps.cpp", 1000 },
  { "E5081101", "Power Supply non power fault (PS2)   ", {}, "mps.cpp", 1000 },
  { "E5081300", "Power Supply power fault (PS1)       ", {}, "mps.cpp", 1063 },
  { "E5081300", "Power Supply power fault (PS1)       ", {}, "mps.cpp", 1082 },
  { "E5081300", "Power Supply power fault (PS1)       ", {}, "mps.cpp", 1101 },
  { "E5081300", "Power Supply power fault (PS1)       ", {}, "mps.cpp", 1120 },
  { "E5081300", "Power Supply power fault (PS1)       ", {}, "mps.cpp", 1158 },
  { "E5081300", "Power Supply power fault (PS1)       ", {}, "mps.cpp", 1177 },
  { "E5081301", "Power Supply power fault (PS2)       ", {}, "mps.cpp", 1063 },
  { "E5081301", "Power Supply power fault (PS2)       ", {}, "mps.cpp", 1082 },
  { "E5081301", "Power Supply power fault (PS2)       ", {}, "mps.cpp", 1101 },
  { "E5081301", "Power Supply power fault (PS2)       ", {}, "mps.cpp", 1120 },
  { "E5081301", "Power Supply power fault (PS2)       ", {}, "mps.cpp", 1158 },
  { "E5081301", "Power Supply power fault (PS2)       ", {}, "mps.cpp", 1177 },
  { "E5081400", "Domain Fault allocated to node (PS1) ", {}, "mps.cpp", 1044 },
  { "E5081401", "Domain Fault allocated to node (PS2) ", {}, "mps.cpp", 1044 },
  { "E5081500", "Power Supply AC fault (PS1)          ", {}, "mps.cpp", 1024 },
  { "E5081501", "Power Supply AC fault (PS2)          ", {}, "mps.cpp", 1024 },
  { "E5081600", "Power Supply missing (PS1)           ", {}, "mps.cpp", 147 },
  { "E5081601", "Power Supply missing (PS2)           ", {}, "mps.cpp", 147 },
  { "E5081700", "Fan Fault - PS1 MPS fault bit set    ", {}, "mps.cpp", 1139 },
  { "E5081701", "Fan Fault - PS2 MPS fault bit set    ", {}, "mps.cpp", 1139 },
  { "E5082610", "P1 IO Bay VRM not plugged            ", {}, "pgood_monitor.cpp", 713 },
  { "E5082611", "P2 IO Bay VRM not plugged            ", {}, "pgood_monitor.cpp", 889 },
  { "E80884C0", "Machine Type/Model keyword not found in midplane VPD ", {}, "tms.cpp", 157 },
  { "E80884C1", "Machine Type/Model keyword not found in midplane VPD ", {}, "tms.cpp", 157 },
  { "E80884C2", "Machine Serial Number keyword not found in midplane VPD ", {}, "tms.cpp", 171 },
  { "E80884C3", "Machine Serial Number keyword not found in midplane VPD ", {}, "tms.cpp", 171 },
  { "E80884C4", "Valid midplane VPD not collected.  Log only ", {}, "tms.cpp", 181 },
  { "E80884C5", "Valid midplane VPD not collected.  Log only ", {}, "tms.cpp", 181 },
  { "E80884C6", "Failure updating Machine Type/Model keyword in midplane VPD ", {}, "tms.cpp", 243 },
  { "E80884C7", "Failure updating Machine Type/Model keyword in midplane VPD ", {}, "tms.cpp", 243 },
  { "E80884C8", "Failure updating Machine Serial Number keyword in midplane VPD ", {}, "tms.cpp", 264 },
  { "E80884C9", "Failure updating Machine Serial Number keyword in midplane VPD ", {}, "tms.cpp", 264 },
  { "E80884CA", "Failure updating Machine Serial Number keyword in midplane VPD due to I2C error. Log only ", {}, "tms.cpp", 272 },
  { "E80884CB", "Failure updating Machine Serial Number keyword in midplane VPD due to I2C error. Log only ", {}, "tms.cpp", 272 },
  { "E80884CC", "CMC Card Non-volatile storage problem ", {}, "nvs.cpp", 909 },
  { "E80884CD", "The Machine Type, Model, and Serial Number values cannot be determined. Log only ", {}, "tms.cpp", 619 },
  { "E80884CE", "The Machine Type, Model, and Serial Number was overwritten in the CMC card flash. Log only ", {}, "tms.cpp", 499 },
  { "E80884CF", "The Machine Type, Model, and Serial Number was overwritten in the CMC card flash with values from 1 midplane VPD chip. Log only ", {}, "tms.cpp", 591 },
  { "E80884D0", "The Machine Type, Model, and Serial Number was overwritten in the CMC card flash with values from 1 midplane VPD chip. Log only ", {}, "tms.cpp", 570 },
  { "E80884D1", "The Machine Type, Model, and Serial Number values cannot be determined. Log only ", {}, "tms.cpp", 667 },
  { "E9083100", "I2C Error device PINEY_ADT7470_0 ", {}, "iicm_error.cpp", 259 },
  { "E9083101", "I2C Error device PINEY_ADT7470_1 ", {}, "iicm_error.cpp", 259 },
  { "E9083102", "I2C Error device PINEY_9551_0    ", {}, "iicm_error.cpp", 259 },
  { "E9083103", "I2C Error device PINEY_9551_1    ", {}, "iicm_error.cpp", 259 },
  { "E9083104", "I2C Error device OPHEIM_VPD_1    ", {}, "iicm_error.cpp", 259 },
  { "E9083105", "I2C Error device IOBAY_1_CCARD_0_TEMP ", {}, "iicm_error.cpp", 259 },
  { "E9083106", "I2C Error device IOBAY_1_CCARD_1_TEMP ", {}, "iicm_error.cpp", 259 },
  { "E9083107", "I2C Error device IOBAY_1_9551_0    ", {}, "iicm_error.cpp", 259 },
  { "E9083108", "I2C Error device IOBAY_1_9551_1    ", {}, "iicm_error.cpp", 259 },
  { "E9083109", "I2C Error device IOBAY_1_9554_0    ", {}, "iicm_error.cpp", 259 },
  { "E908310A", "I2C Error device IOBAY_1_9554_1    ", {}, "iicm_error.cpp", 259 },
  { "E908310B", "I2C Error device IOBAY_1_VPD       ", {}, "iicm_error.cpp", 259 },
  { "E908310C", "I2C Error device IOBAY_1_VRM_VPD   ", {}, "iicm_error.cpp", 259 },
  { "E908310D", "I2C Error device IOBAY_1_VRM_MICRO ", {}, "iicm_error.cpp", 259 },
  { "E908310E", "I2C Error device IOBAY_1_ADS7828 ", {}, "iicm_error.cpp", 259 },
  { "E9083111", "I2C Error device IOBAY_1_PLX       ", {}, "iicm_error.cpp", 259 },
  { "E9083112", "I2C Error device IOBAY_1_CCARD_0_FPGA_0    ", {}, "iicm_error.cpp", 259 },
  { "E9083113", "I2C Error device IOBAY_1_CCARD_0_FPGA_IO_0 ", {}, "iicm_error.cpp", 259 },
  { "E9083114", "I2C Error device IOBAY_1_CCARD_0_CXP_0     ", {}, "iicm_error.cpp", 259 },
  { "E9083115", "I2C Error device IOBAY_1_CCARD_0_CXP_1     ", {}, "iicm_error.cpp", 259 },
  { "E9083116", "I2C Error device IOBAY_1_CCARD_0_RETIMER_0 ", {}, "iicm_error.cpp", 259 },
  { "E9083117", "I2C Error device IOBAY_1_CCARD_0_FPGA_1    ", {}, "iicm_error.cpp", 259 },
  { "E9083118", "I2C Error device IOBAY_1_CCARD_0_FPGA_IO_1 ", {}, "iicm_error.cpp", 259 },
  { "E9083119", "I2C Error device IOBAY_1_CCARD_0_CXP_2     ", {}, "iicm_error.cpp", 259 },
  { "E908311A", "I2C Error device IOBAY_1_CCARD_0_CXP_3     ", {}, "iicm_error.cpp", 259 },
  { "E908311B", "I2C Error device IOBAY_1_CCARD_0_RETIMER_1 ", {}, "iicm_error.cpp", 259 },
  { "E908311C", "I2C Error device IOBAY_1_CCARD_1_FPGA_0    ", {}, "iicm_error.cpp", 259 },
  { "E908311D", "I2C Error device IOBAY_1_CCARD_1_FPGA_IO_0 ", {}, "iicm_error.cpp", 259 },
  { "E908311E", "I2C Error device IOBAY_1_CCARD_1_CXP_0     ", {}, "iicm_error.cpp", 259 },
  { "E908311F", "I2C Error device IOBAY_1_CCARD_1_CXP_1     ", {}, "iicm_error.cpp", 259 },
  { "E9083120", "I2C Error device IOBAY_1_CCARD_1_RETIMER_0 ", {}, "iicm_error.cpp", 259 },
  { "E9083121", "I2C Error device IOBAY_1_CCARD_1_FPGA_1    ", {}, "iicm_error.cpp", 259 },
  { "E9083122", "I2C Error device IOBAY_1_CCARD_1_FPGA_IO_1 ", {}, "iicm_error.cpp", 259 },
  { "E9083123", "I2C Error device IOBAY_1_CCARD_1_CXP_2     ", {}, "iicm_error.cpp", 259 },
  { "E9083124", "I2C Error device IOBAY_1_CCARD_1_CXP_3     ", {}, "iicm_error.cpp", 259 },
  { "E9083125", "I2C Error device IOBAY_1_CCARD_1_RETIMER_1 ", {}, "iicm_error.cpp", 259 },
  { "E90831FF", "I2C Bus 1 Fault SDA and/or SCL Stuck Low ", {}, "iicm_error.cpp", 200 },
  { "E9083226", "I2C Error device PINEY_ALT_SENSOR ", {}, "iicm_error.cpp", 265 },
  { "E9083227", "I2C Error device PINEY_VPD        ", {}, "iicm_error.cpp", 265 },
  { "E9083228", "I2C Error device OPHEIM_VPD_0     ", {}, "iicm_error.cpp", 265 },
  { "E9083229", "I2C Error device IOBAY_0_CCARD_0_TEMP ", {}, "iicm_error.cpp", 265 },
  { "E908322A", "I2C Error device IOBAY_0_CCARD_1_TEMP ", {}, "iicm_error.cpp", 265 },
  { "E908322B", "I2C Error device IOBAY_0_9551_0  ", {}, "iicm_error.cpp", 265 },
  { "E908322C", "I2C Error device IOBAY_0_9551_1  ", {}, "iicm_error.cpp", 265 },
  { "E908322D", "I2C Error device IOBAY_0_9554_0  ", {}, "iicm_error.cpp", 265 },
  { "E908322E", "I2C Error device IOBAY_0_9554_1  ", {}, "iicm_error.cpp", 265 },
  { "E908322F", "I2C Error device IOBAY_0_VPD       ", {}, "iicm_error.cpp", 265 },
  { "E9083230", "I2C Error device IOBAY_0_VRM_VPD   ", {}, "iicm_error.cpp", 265 },
  { "E9083231", "I2C Error device IOBAY_0_VRM_MICRO ", {}, "iicm_error.cpp", 265 },
  { "E9083232", "I2C Error device IOBAY_0_ADS7828 ", {}, "iicm_error.cpp", 265 },
  { "E9083235", "I2C Error device IOBAY_0_PLX       ", {}, "iicm_error.cpp", 265 },
  { "E9083236", "I2C Error device IOBAY_0_CCARD_0_FPGA_0    ", {}, "iicm_error.cpp", 265 },
  { "E9083237", "I2C Error device IOBAY_0_CCARD_0_FPGA_IO_0 ", {}, "iicm_error.cpp", 265 },
  { "E9083238", "I2C Error device IOBAY_0_CCARD_0_CXP_0     ", {}, "iicm_error.cpp", 265 },
  { "E9083239", "I2C Error device IOBAY_0_CCARD_0_CXP_1     ", {}, "iicm_error.cpp", 265 },
  { "E908323A", "I2C Error device IOBAY_0_CCARD_0_RETIMER_0 ", {}, "iicm_error.cpp", 265 },
  { "E908323B", "I2C Error device IOBAY_0_CCARD_0_FPGA_1    ", {}, "iicm_error.cpp", 265 },
  { "E908323C", "I2C Error device IOBAY_0_CCARD_0_FPGA_IO_1 ", {}, "iicm_error.cpp", 265 },
  { "E908323D", "I2C Error device IOBAY_0_CCARD_0_CXP_2     ", {}, "iicm_error.cpp", 265 },
  { "E908323E", "I2C Error device IOBAY_0_CCARD_0_CXP_3     ", {}, "iicm_error.cpp", 265 },
  { "E908323F", "I2C Error device IOBAY_0_CCARD_0_RETIMER_1 ", {}, "iicm_error.cpp", 265 },
  { "E9083240", "I2C Error device IOBAY_0_CCARD_1_FPGA_0    ", {}, "iicm_error.cpp", 265 },
  { "E9083241", "I2C Error device IOBAY_0_CCARD_1_FPGA_IO_0 ", {}, "iicm_error.cpp", 265 },
  { "E9083242", "I2C Error device IOBAY_0_CCARD_1_CXP_0     ", {}, "iicm_error.cpp", 265 },
  { "E9083243", "I2C Error device IOBAY_0_CCARD_1_CXP_1     ", {}, "iicm_error.cpp", 265 },
  { "E9083244", "I2C Error device IOBAY_0_CCARD_1_RETIMER_0 ", {}, "iicm_error.cpp", 265 },
  { "E9083245", "I2C Error device IOBAY_0_CCARD_1_FPGA_1    ", {}, "iicm_error.cpp", 265 },
  { "E9083246", "I2C Error device IOBAY_0_CCARD_1_FPGA_IO_1 ", {}, "iicm_error.cpp", 265 },
  { "E9083247", "I2C Error device IOBAY_0_CCARD_1_CXP_2     ", {}, "iicm_error.cpp", 265 },
  { "E9083248", "I2C Error device IOBAY_0_CCARD_1_CXP_3     ", {}, "iicm_error.cpp", 265 },
  { "E9083249", "I2C Error device IOBAY_0_CCARD_1_RETIMER_1 ", {}, "iicm_error.cpp", 265 },
  { "E90832FF", "I2C Bus 2 Fault SDA and/or SCL Stuck Low ", {}, "iicm_error.cpp", 206 },
  { "E908334A", "I2C Error device POWER_SUPPLY_1 ", {}, "iicm_error.cpp", 271 },
  { "E90833FF", "I2C Bus 3 Fault SDA and/or SCL Stuck Low ", {}, "iicm_error.cpp", 212 },
  { "E908344B", "I2C Error device POWER_SUPPLY_0 ", {}, "iicm_error.cpp", 277 },
  { "E90834FF", "I2C Bus 4 Fault SDA and/or SCL Stuck Low ", {}, "iicm_error.cpp", 218 },
  { "EA088403", "VRM0 has chkum errors in VPD  ", {}, "vpd_col.cpp", 1715 },
  { "EA088404", "VRM1 has chkum errors in VPD  ", {}, "vpd_col.cpp", 1715 },
  { "EA088405", "Midplane has ECC errors or other bad VPD  ", {}, "vpd_col.cpp", 1715 },
  { "EA088406", "IOBAY0 has ECC errors or other bad VPD  ", {}, "vpd_col.cpp", 1715 },
  { "EA088407", "IOBAY1 has ECC errors or other bad VPD  ", {}, "vpd_col.cpp", 1715 },
  { "EA088408", "PINEY has ECC errors or other bad VPD  ", {}, "vpd_col.cpp", 1715 },
  { "EA088409", "Midplane redundant VPD has ECC errors or other bad VPD  ", {}, "vpd_col.cpp", 1715 },
  { "EA08840F", "CMC Card VPD content problem ", {}, "fpga.cpp", 834 },
  { "EA0884**", "FLT_HI_VPD (0x%02X) - VPD_FPGA_NOT_SUPPORTED  (0x%02X)", {3,4}, "vpd_col.cpp", 1760 },
  { "EA08CB15", "Piney PEROM Error                    ", {}, "misc.cpp", 259 },
  { "EB088B00", "IO Bay 0 FPGA fail                   ", {}, "fpga.cpp", 1303 },
  { "EB088B01", "IO Bay 1 FPGA fail                   ", {}, "fpga.cpp", 1303 },
  { "EB088B10", "LX VPD Keyword missing from IO Bay 0 ", {}, "fpga.cpp", 875 },
  { "EB088B11", "LX VPD Keyword missing from IO Bay 1 ", {}, "fpga.cpp", 877 },
  { "EB088B20", "VINI VPD record is too large on IO Bay 0, log only ", {}, "fpga.cpp", 1029 },
  { "EB088B21", "VINI VPD record is too large on IO Bay 1, log only ", {}, "fpga.cpp", 1032 },
  { "EB088B30", "IO Bay 0 was removed with system powered on, log only ", {}, "states.cpp", 871 },
  { "EB088B31", "IO Bay 1 was removed with system powered on, log only ", {}, "states.cpp", 1007 },
  { "EB088B40", "Unable to determine IO Bay 0 type    ", {}, "vpd_col.cpp", 2612 },
  { "EB088B41", "Unable to determine IO Bay 1 type    ", {}, "vpd_col.cpp", 2614 },
  { "EF0800AC", "AC loss                              ", {}, "cmds_util.cpp", 3047 },
  { "EF0800C8", "Power On Node Type                   ", {}, "cmds_util.cpp", 3047 },
  { "EF0800EF", "Emergency Power Off                  ", {}, "cmds_util.cpp", 3047 },
  { "EF081100", "Power Supply non power fault (PS1)   ", {}, "cmds_util.cpp", 3047 },
  { "EF081101", "Power Supply non power fault (PS2)   ", {}, "cmds_util.cpp", 3047 },
  { "EF081300", "Power Supply power fault (PS1)       ", {}, "cmds_util.cpp", 3047 },
  { "EF081301", "Power Supply power fault (PS2)       ", {}, "cmds_util.cpp", 3047 },
  { "EF081400", "Domain Fault allocated to node (PS1) ", {}, "cmds_util.cpp", 3047 },
  { "EF081401", "Domain Fault allocated to node (PS2) ", {}, "cmds_util.cpp", 3047 },
  { "EF081500", "Power Supply AC fault (PS1)          ", {}, "cmds_util.cpp", 3047 },
  { "EF081501", "Power Supply AC fault (PS2)          ", {}, "cmds_util.cpp", 3047 },
  { "EF081600", "Power Supply missing (PS1)           ", {}, "cmds_util.cpp", 3047 },
  { "EF081601", "Power Supply missing (PS2)           ", {}, "cmds_util.cpp", 3047 },
  { "EF081700", "Fan Fault - PS1 MPS fault bit set    ", {}, "cmds_util.cpp", 3047 },
  { "EF081701", "Fan Fault - PS2 MPS fault bit set    ", {}, "cmds_util.cpp", 3047 },
  { "EF081F02", "ILOG Threshold reached - Log Only    ", {}, "cmds_util.cpp", 3047 },
  { "EF082610", "P1 IO Bay VRM not plugged            ", {}, "cmds_util.cpp", 3047 },
  { "EF082611", "P2 IO Bay VRM not plugged            ", {}, "cmds_util.cpp", 3047 },
  { "EF082620", "P1 IO Bay 3.3VCS Pgood Fault         ", {}, "cmds_util.cpp", 3047 },
  { "EF082621", "P2 IO Bay 3.3VCS Pgood Fault         ", {}, "cmds_util.cpp", 3047 },
  { "EF082630", "P1 IO Bay 1.2VCS Module Pgood Fault  ", {}, "cmds_util.cpp", 3047 },
  { "EF082631", "P2 IO Bay 1.2VCS Module Pgood Fault  ", {}, "cmds_util.cpp", 3047 },
  { "EF082640", "P1 IO Bay 1.2VCS Module B Pgood Fault", {}, "cmds_util.cpp", 3047 },
  { "EF082641", "P2 IO Bay 1.2VCS Module B Pgood Fault", {}, "cmds_util.cpp", 3047 },
  { "EF082650", "P1 IO Bay 12V SS PGood Fault         ", {}, "cmds_util.cpp", 3047 },
  { "EF082651", "P2 IO Bay 12V SS PGood Fault         ", {}, "cmds_util.cpp", 3047 },
  { "EF082660", "P1 IO Bay VRM NON-VCS Pgood Fault    ", {}, "cmds_util.cpp", 3047 },
  { "EF082661", "P2 IO Bay VRM NON-VCS Pgood Fault    ", {}, "cmds_util.cpp", 3047 },
  { "EF082670", "P1 IO Bay 1.0V Pgood Fault           ", {}, "cmds_util.cpp", 3047 },
  { "EF082671", "P2 IO Bay 1.0V Pgood Fault           ", {}, "cmds_util.cpp", 3047 },
  { "EF082680", "P1 IO Bay 1.0V Pgood Fault B         ", {}, "cmds_util.cpp", 3047 },
  { "EF082681", "P2 IO Bay 1.0V Pgood Fault B         ", {}, "cmds_util.cpp", 3047 },
  { "EF082690", "P1 IO Bay VRM is in \"N-Mode\"         ", {}, "cmds_util.cpp", 3047 },
  { "EF082691", "P2 IO Bay VRM is in \"N-Mode\"         ", {}, "cmds_util.cpp", 3047 },
  { "EF0826A0", "P1 IO Bay VRM is in \"N+1 Mode\" INFO  ", {}, "cmds_util.cpp", 3047 },
  { "EF0826A1", "P2 IO Bay VRM is in \"N+1 Mode\" INFO  ", {}, "cmds_util.cpp", 3047 },
  { "EF0826B0", "P1 IO Bay VRM is in \"N+1 Mode\" CRIT  ", {}, "cmds_util.cpp", 3047 },
  { "EF0826B1", "P2 IO Bay VRM is in \"N+1 Mode\" CRIT  ", {}, "cmds_util.cpp", 3047 },
  { "EF083100", "I2C Error device PINEY_ADT7470_0 ", {}, "cmds_util.cpp", 3047 },
  { "EF083101", "I2C Error device PINEY_ADT7470_1 ", {}, "cmds_util.cpp", 3047 },
  { "EF083102", "I2C Error device PINEY_9551_0    ", {}, "cmds_util.cpp", 3047 },
  { "EF083103", "I2C Error device PINEY_9551_1    ", {}, "cmds_util.cpp", 3047 },
  { "EF083104", "I2C Error device OPHEIM_VPD_1    ", {}, "cmds_util.cpp", 3047 },
  { "EF083105", "I2C Error device IOBAY_1_CCARD_0_TEMP ", {}, "cmds_util.cpp", 3047 },
  { "EF083106", "I2C Error device IOBAY_1_CCARD_1_TEMP ", {}, "cmds_util.cpp", 3047 },
  { "EF083107", "I2C Error device IOBAY_1_9551_0    ", {}, "cmds_util.cpp", 3047 },
  { "EF083108", "I2C Error device IOBAY_1_9551_1    ", {}, "cmds_util.cpp", 3047 },
  { "EF083109", "I2C Error device IOBAY_1_9554_0    ", {}, "cmds_util.cpp", 3047 },
  { "EF08310A", "I2C Error device IOBAY_1_9554_1    ", {}, "cmds_util.cpp", 3047 },
  { "EF08310B", "I2C Error device IOBAY_1_VPD       ", {}, "cmds_util.cpp", 3047 },
  { "EF08310C", "I2C Error device IOBAY_1_VRM_VPD   ", {}, "cmds_util.cpp", 3047 },
  { "EF08310D", "I2C Error device IOBAY_1_VRM_MICRO ", {}, "cmds_util.cpp", 3047 },
  { "EF08310E", "I2C Error device IOBAY_1_ADS7828 ", {}, "cmds_util.cpp", 3047 },
  { "EF083111", "I2C Error device IOBAY_1_PLX       ", {}, "cmds_util.cpp", 3047 },
  { "EF083112", "I2C Error device IOBAY_1_CCARD_0_FPGA_0    ", {}, "cmds_util.cpp", 3047 },
  { "EF083113", "I2C Error device IOBAY_1_CCARD_0_FPGA_IO_0 ", {}, "cmds_util.cpp", 3047 },
  { "EF083114", "I2C Error device IOBAY_1_CCARD_0_CXP_0     ", {}, "cmds_util.cpp", 3047 },
  { "EF083115", "I2C Error device IOBAY_1_CCARD_0_CXP_1     ", {}, "cmds_util.cpp", 3047 },
  { "EF083116", "I2C Error device IOBAY_1_CCARD_0_RETIMER_0 ", {}, "cmds_util.cpp", 3047 },
  { "EF083117", "I2C Error device IOBAY_1_CCARD_0_FPGA_1    ", {}, "cmds_util.cpp", 3047 },
  { "EF083118", "I2C Error device IOBAY_1_CCARD_0_FPGA_IO_1 ", {}, "cmds_util.cpp", 3047 },
  { "EF083119", "I2C Error device IOBAY_1_CCARD_0_CXP_2     ", {}, "cmds_util.cpp", 3047 },
  { "EF08311A", "I2C Error device IOBAY_1_CCARD_0_CXP_3     ", {}, "cmds_util.cpp", 3047 },
  { "EF08311B", "I2C Error device IOBAY_1_CCARD_0_RETIMER_1 ", {}, "cmds_util.cpp", 3047 },
  { "EF08311C", "I2C Error device IOBAY_1_CCARD_1_FPGA_0    ", {}, "cmds_util.cpp", 3047 },
  { "EF08311D", "I2C Error device IOBAY_1_CCARD_1_FPGA_IO_0 ", {}, "cmds_util.cpp", 3047 },
  { "EF08311E", "I2C Error device IOBAY_1_CCARD_1_CXP_0     ", {}, "cmds_util.cpp", 3047 },
  { "EF08311F", "I2C Error device IOBAY_1_CCARD_1_CXP_1     ", {}, "cmds_util.cpp", 3047 },
  { "EF083120", "I2C Error device IOBAY_1_CCARD_1_RETIMER_0 ", {}, "cmds_util.cpp", 3047 },
  { "EF083121", "I2C Error device IOBAY_1_CCARD_1_FPGA_1    ", {}, "cmds_util.cpp", 3047 },
  { "EF083122", "I2C Error device IOBAY_1_CCARD_1_FPGA_IO_1 ", {}, "cmds_util.cpp", 3047 },
  { "EF083123", "I2C Error device IOBAY_1_CCARD_1_CXP_2     ", {}, "cmds_util.cpp", 3047 },
  { "EF083124", "I2C Error device IOBAY_1_CCARD_1_CXP_3     ", {}, "cmds_util.cpp", 3047 },
  { "EF083125", "I2C Error device IOBAY_1_CCARD_1_RETIMER_1 ", {}, "cmds_util.cpp", 3047 },
  { "EF0831FF", "I2C Bus 1 Fault SDA and/or SCL Stuck Low ", {}, "cmds_util.cpp", 3047 },
  { "EF083226", "I2C Error device PINEY_ALT_SENSOR ", {}, "cmds_util.cpp", 3047 },
  { "EF083227", "I2C Error device PINEY_VPD        ", {}, "cmds_util.cpp", 3047 },
  { "EF083228", "I2C Error device OPHEIM_VPD_0     ", {}, "cmds_util.cpp", 3047 },
  { "EF083229", "I2C Error device IOBAY_0_CCARD_0_TEMP ", {}, "cmds_util.cpp", 3047 },
  { "EF08322A", "I2C Error device IOBAY_0_CCARD_1_TEMP ", {}, "cmds_util.cpp", 3047 },
  { "EF08322B", "I2C Error device IOBAY_0_9551_0  ", {}, "cmds_util.cpp", 3047 },
  { "EF08322C", "I2C Error device IOBAY_0_9551_1  ", {}, "cmds_util.cpp", 3047 },
  { "EF08322D", "I2C Error device IOBAY_0_9554_0  ", {}, "cmds_util.cpp", 3047 },
  { "EF08322E", "I2C Error device IOBAY_0_9554_1  ", {}, "cmds_util.cpp", 3047 },
  { "EF08322F", "I2C Error device IOBAY_0_VPD       ", {}, "cmds_util.cpp", 3047 },
  { "EF083230", "I2C Error device IOBAY_0_VRM_VPD   ", {}, "cmds_util.cpp", 3047 },
  { "EF083231", "I2C Error device IOBAY_0_VRM_MICRO ", {}, "cmds_util.cpp", 3047 },
  { "EF083232", "I2C Error device IOBAY_0_ADS7828 ", {}, "cmds_util.cpp", 3047 },
  { "EF083235", "I2C Error device IOBAY_0_PLX       ", {}, "cmds_util.cpp", 3047 },
  { "EF083236", "I2C Error device IOBAY_0_CCARD_0_FPGA_0    ", {}, "cmds_util.cpp", 3047 },
  { "EF083237", "I2C Error device IOBAY_0_CCARD_0_FPGA_IO_0 ", {}, "cmds_util.cpp", 3047 },
  { "EF083238", "I2C Error device IOBAY_0_CCARD_0_CXP_0     ", {}, "cmds_util.cpp", 3047 },
  { "EF083239", "I2C Error device IOBAY_0_CCARD_0_CXP_1     ", {}, "cmds_util.cpp", 3047 },
  { "EF08323A", "I2C Error device IOBAY_0_CCARD_0_RETIMER_0 ", {}, "cmds_util.cpp", 3047 },
  { "EF08323B", "I2C Error device IOBAY_0_CCARD_0_FPGA_1    ", {}, "cmds_util.cpp", 3047 },
  { "EF08323C", "I2C Error device IOBAY_0_CCARD_0_FPGA_IO_1 ", {}, "cmds_util.cpp", 3047 },
  { "EF08323D", "I2C Error device IOBAY_0_CCARD_0_CXP_2     ", {}, "cmds_util.cpp", 3047 },
  { "EF08323E", "I2C Error device IOBAY_0_CCARD_0_CXP_3     ", {}, "cmds_util.cpp", 3047 },
  { "EF08323F", "I2C Error device IOBAY_0_CCARD_0_RETIMER_1 ", {}, "cmds_util.cpp", 3047 },
  { "EF083240", "I2C Error device IOBAY_0_CCARD_1_FPGA_0    ", {}, "cmds_util.cpp", 3047 },
  { "EF083241", "I2C Error device IOBAY_0_CCARD_1_FPGA_IO_0 ", {}, "cmds_util.cpp", 3047 },
  { "EF083242", "I2C Error device IOBAY_0_CCARD_1_CXP_0     ", {}, "cmds_util.cpp", 3047 },
  { "EF083243", "I2C Error device IOBAY_0_CCARD_1_CXP_1     ", {}, "cmds_util.cpp", 3047 },
  { "EF083244", "I2C Error device IOBAY_0_CCARD_1_RETIMER_0 ", {}, "cmds_util.cpp", 3047 },
  { "EF083245", "I2C Error device IOBAY_0_CCARD_1_FPGA_1    ", {}, "cmds_util.cpp", 3047 },
  { "EF083246", "I2C Error device IOBAY_0_CCARD_1_FPGA_IO_1 ", {}, "cmds_util.cpp", 3047 },
  { "EF083247", "I2C Error device IOBAY_0_CCARD_1_CXP_2     ", {}, "cmds_util.cpp", 3047 },
  { "EF083248", "I2C Error device IOBAY_0_CCARD_1_CXP_3     ", {}, "cmds_util.cpp", 3047 },
  { "EF083249", "I2C Error device IOBAY_0_CCARD_1_RETIMER_1 ", {}, "cmds_util.cpp", 3047 },
  { "EF0832FF", "I2C Bus 2 Fault SDA and/or SCL Stuck Low ", {}, "cmds_util.cpp", 3047 },
  { "EF08334A", "I2C Error device POWER_SUPPLY_1 ", {}, "cmds_util.cpp", 3047 },
  { "EF0833FF", "I2C Bus 3 Fault SDA and/or SCL Stuck Low ", {}, "cmds_util.cpp", 3047 },
  { "EF08344B", "I2C Error device POWER_SUPPLY_0 ", {}, "cmds_util.cpp", 3047 },
  { "EF0834FF", "I2C Bus 4 Fault SDA and/or SCL Stuck Low ", {}, "cmds_util.cpp", 3047 },
  { "EF087100", "Sensor Fault - DPS310 on Piney       ", {}, "cmds_util.cpp", 3047 },
  { "EF087201", "High Temperature Warning             ", {}, "cmds_util.cpp", 3047 },
  { "EF087202", "Temperature Warning Reset            ", {}, "cmds_util.cpp", 3047 },
  { "EF087210", "High Altitude Warning                ", {}, "cmds_util.cpp", 3047 },
  { "EF087500", "Fan Controller Fault - ADT 7470 1    ", {}, "cmds_util.cpp", 3047 },
  { "EF087501", "Fan Controller Fault - ADT 7470 2    ", {}, "cmds_util.cpp", 3047 },
  { "EF087600", "Fan Fault - PS1 Fan Rotor 1          ", {}, "cmds_util.cpp", 3047 },
  { "EF087601", "Fan Fault - PS1 Fan Rotor 2          ", {}, "cmds_util.cpp", 3047 },
  { "EF087602", "Fan Fault - PS2 Fan Rotor 1          ", {}, "cmds_util.cpp", 3047 },
  { "EF087603", "Fan Fault - PS2 Fan Rotor 2          ", {}, "cmds_util.cpp", 3047 },
  { "EF087604", "Fan Fault - System Fan 1, Rotor 1    ", {}, "cmds_util.cpp", 3047 },
  { "EF087605", "Fan Fault - System Fan 1, Rotor 2    ", {}, "cmds_util.cpp", 3047 },
  { "EF087606", "Fan Fault - System Fan 2, Rotor 1    ", {}, "cmds_util.cpp", 3047 },
  { "EF087607", "Fan Fault - System Fan 2, Rotor 2    ", {}, "cmds_util.cpp", 3047 },
  { "EF087608", "Fan Fault - System Fan 3, Rotor 1    ", {}, "cmds_util.cpp", 3047 },
  { "EF087609", "Fan Fault - System Fan 3, Rotor 2    ", {}, "cmds_util.cpp", 3047 },
  { "EF08760A", "Fan Fault - System Fan 4, Rotor 1    ", {}, "cmds_util.cpp", 3047 },
  { "EF08760B", "Fan Fault - System Fan 4, Rotor 2    ", {}, "cmds_util.cpp", 3047 },
  { "EF087704", "Fan Missing - System Fan 1           ", {}, "cmds_util.cpp", 3047 },
  { "EF087706", "Fan Missing - System Fan 2           ", {}, "cmds_util.cpp", 3047 },
  { "EF087708", "Fan Missing - System Fan 3           ", {}, "cmds_util.cpp", 3047 },
  { "EF08770A", "Fan Missing - System Fan 4           ", {}, "cmds_util.cpp", 3047 },
  { "EF087800", "Fan Communication Error - PS1 Rotor1 ", {}, "cmds_util.cpp", 3047 },
  { "EF087801", "Fan Communication Error - PS1 Rotor2 ", {}, "cmds_util.cpp", 3047 },
  { "EF087802", "Fan Communication Error - PS2 Rotor1 ", {}, "cmds_util.cpp", 3047 },
  { "EF087803", "Fan Communication Error - PS2 Rotor2 ", {}, "cmds_util.cpp", 3047 },
  { "EF088401", "Failure reading I2C VPD              ", {}, "cmds_util.cpp", 3047 },
  { "EF088402", "FPGA Device is not supported in VPD  ", {}, "cmds_util.cpp", 3047 },
  { "EF088403", "VRM0 has chkum errors in VPD  ", {}, "cmds_util.cpp", 3047 },
  { "EF088404", "VRM1 has chkum errors in VPD  ", {}, "cmds_util.cpp", 3047 },
  { "EF088405", "Midplane has ECC errors or other bad VPD  ", {}, "cmds_util.cpp", 3047 },
  { "EF088406", "IOBAY0 has ECC errors or other bad VPD  ", {}, "cmds_util.cpp", 3047 },
  { "EF088407", "IOBAY1 has ECC errors or other bad VPD  ", {}, "cmds_util.cpp", 3047 },
  { "EF088408", "PINEY has ECC errors or other bad VPD  ", {}, "cmds_util.cpp", 3047 },
  { "EF088409", "Midplane redundant VPD has ECC errors or other bad VPD  ", {}, "cmds_util.cpp", 3047 },
  { "EF08840F", "CMC Card VPD content problem ", {}, "cmds_util.cpp", 3047 },
  { "EF0884C0", "Machine Type/Model keyword not found in midplane VPD ", {}, "cmds_util.cpp", 3047 },
  { "EF0884C1", "Machine Type/Model keyword not found in midplane VPD ", {}, "cmds_util.cpp", 3047 },
  { "EF0884C2", "Machine Serial Number keyword not found in midplane VPD ", {}, "cmds_util.cpp", 3047 },
  { "EF0884C3", "Machine Serial Number keyword not found in midplane VPD ", {}, "cmds_util.cpp", 3047 },
  { "EF0884C4", "Valid midplane VPD not collected.  Log only ", {}, "cmds_util.cpp", 3047 },
  { "EF0884C5", "Valid midplane VPD not collected.  Log only ", {}, "cmds_util.cpp", 3047 },
  { "EF0884C6", "Failure updating Machine Type/Model keyword in midplane VPD ", {}, "cmds_util.cpp", 3047 },
  { "EF0884C7", "Failure updating Machine Type/Model keyword in midplane VPD ", {}, "cmds_util.cpp", 3047 },
  { "EF0884C8", "Failure updating Machine Serial Number keyword in midplane VPD ", {}, "cmds_util.cpp", 3047 },
  { "EF0884C9", "Failure updating Machine Serial Number keyword in midplane VPD ", {}, "cmds_util.cpp", 3047 },
  { "EF0884CA", "Failure updating Machine Serial Number keyword in midplane VPD due to I2C error. Log only ", {}, "cmds_util.cpp", 3047 },
  { "EF0884CB", "Failure updating Machine Serial Number keyword in midplane VPD due to I2C error. Log only ", {}, "cmds_util.cpp", 3047 },
  { "EF0884CC", "CMC Card Non-volatile storage problem ", {}, "cmds_util.cpp", 3047 },
  { "EF0884CD", "The Machine Type, Model, and Serial Number values cannot be determined. Log only ", {}, "cmds_util.cpp", 3047 },
  { "EF0884CE", "The Machine Type, Model, and Serial Number was overwritten in the CMC card flash. Log only ", {}, "cmds_util.cpp", 3047 },
  { "EF0884CF", "The Machine Type, Model, and Serial Number was overwritten in the CMC card flash with values from 1 midplane VPD chip. Log only ", {}, "cmds_util.cpp", 3047 },
  { "EF0884D0", "The Machine Type, Model, and Serial Number was overwritten in the CMC card flash with values from 1 midplane VPD chip. Log only ", {}, "cmds_util.cpp", 3047 },
  { "EF0884D1", "The Machine Type, Model, and Serial Number values cannot be determined. Log only ", {}, "cmds_util.cpp", 3047 },
  { "EF088B00", "IO Bay 0 FPGA fail                   ", {}, "cmds_util.cpp", 3047 },
  { "EF088B01", "IO Bay 1 FPGA fail                   ", {}, "cmds_util.cpp", 3047 },
  { "EF088B10", "LX VPD Keyword missing from IO Bay 0 ", {}, "cmds_util.cpp", 3047 },
  { "EF088B11", "LX VPD Keyword missing from IO Bay 1 ", {}, "cmds_util.cpp", 3047 },
  { "EF088B20", "VINI VPD record is too large on IO Bay 0, log only ", {}, "cmds_util.cpp", 3047 },
  { "EF088B21", "VINI VPD record is too large on IO Bay 1, log only ", {}, "cmds_util.cpp", 3047 },
  { "EF088B30", "IO Bay 0 was removed with system powered on, log only ", {}, "cmds_util.cpp", 3047 },
  { "EF088B31", "IO Bay 1 was removed with system powered on, log only ", {}, "cmds_util.cpp", 3047 },
  { "EF088B40", "Unable to determine IO Bay 0 type    ", {}, "cmds_util.cpp", 3047 },
  { "EF088B41", "Unable to determine IO Bay 1 type    ", {}, "cmds_util.cpp", 3047 },
  { "EF08CB15", "Piney PEROM Error                    ", {}, "cmds_util.cpp", 3047 },
  // The following must be the last entry
  { ""        , "The End" }
};


#define MEX_HLOG_SIZE 64

#define MEX_HLOG_FIELD_DESC_LEN 26

struct mex_hlog_field
{
  uint8_t size;
  char description[MEX_HLOG_FIELD_DESC_LEN];
};

#define MEX_HLOG_FIELD_COUNT 38

static struct mex_hlog_field mex_hlog_fields[MEX_HLOG_FIELD_COUNT] =
{
  { 1, "hl_isolated_standby" }, 
  { 1, "hl_net_block_crc_failures" }, 
  { 2, "hl_power_ups" }, 
  { 1, "hl_left_iobay_removes" }, 
  { 1, "hl_right_iobay_removes" }, 
  { 1, "hl_nmi_calls" }, 
  { 1, "hl_fpga_init_retries" }, 
  { 1, "hl_unused_ints_calls" }, 
  { 1, "hl_software_trap_calls" }, 
  { 1, "hl_fpga_alert_retries" }, 
  { 1, "hl_previous_level" }, 
  { 1, "hl_code_updates" }, 
  { 1, "hl_crc_table_corrupt" }, 
  { 1, "hl_ac_loss" }, 
  { 1, "hl_unavailable_pel_entry" }, 
  { 1, "hl_incorrect_pel_state" }, 
  { 1, "hl_invalid_pel_state" }, 
  { 1, "hl_src_mismatch" }, 
  { 1, "hl_pel_entry_overwrite" }, 
  { 2, "hl_pel_entries_created" }, 
  { 1, "hl_led_sets" }, 
  { 1, "hl_sys_fan_removes" }, 
  { 2, "hl_sys_fan_events" }, 
  { 2, "hl_mps_fan_events" }, 
  { 1, "hl_fan_ctl_events" }, 
  { 1, "hl_sensor_events" }, 
  { 1, "hl_service_mode" }, 
  { 1, "hl_1F02_info_logs" }, 
  { 2, "hl_i2c_bus1_events" }, 
  { 2, "hl_i2c_bus2_events" }, 
  { 2, "hl_i2c_bus3_events" }, 
  { 2, "hl_i2c_bus4_events" }, 
  { 1, "hl_i2c_bus1_recovered" }, 
  { 1, "hl_i2c_bus2_recovered" }, 
  { 1, "hl_i2c_bus3_recovered" }, 
  { 1, "hl_i2c_bus4_recovered" }, 
  { 1, "hl_hswp_ctl_events" }, 
  { 1, "hl_ss_sets" }, 
};

